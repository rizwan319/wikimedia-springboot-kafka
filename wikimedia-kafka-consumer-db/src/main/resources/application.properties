server.port: 8082
#tells springboot that kafka broker is running on 9092
spring.kafka.consumer.bootstrap-servers: localhost:9092
#tell which consumer group this consumer belongs to
spring.kafka.consumer.group-id: myWikiGroup
#
spring.kafka.consumer.auto-offset-reset: earliest

#configure key and value serializer classes so whenever we develop kafka producer
#so kafka producer will internally use serializer classes to serialize the input data
spring.kafka.consumer.key-serializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer: org.apache.kafka.common.serialization.StringDeserializer

spring.datasource.url=jdbc:postgresql://localhost:5432/wikiEventdatabase
spring.datasource.username= postgres
spring.datasource.password= 3119
spring.jpa.show-sql= true
spring.datasource.driver-class-name= org.postgresql.Driver

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Hibernate properties
# The sql dialect makes hibernate generate better sql for chosen DB


#Hibernate ddl auto (create ,create-drop ,validate ,update)
#create db table automatically
spring.jpa.hibernate.ddl-auto = update

#
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#show ur statement generated by hibernate in console
spring.jpa.properties.hibernate.show_sql=true
#print the comment
spring.jpa.properties.hibernate.use_sql_comments=true
#tells hibernate that sql statement printed in console are well formatted
spring.jpa.properties.hibernate.format_sql=true